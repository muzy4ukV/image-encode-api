# This workflow build and push a Docker container to Google Artifact Registry
# and deploy it on Cloud Run when a commit is pushed to the "main"
# branch.
#
# To configure this workflow:
#
# 1. Enable the following Google Cloud APIs:
#
#    - Artifact Registry (artifactregistry.googleapis.com)
#    - Cloud Run (run.googleapis.com)
#    - IAM Credentials API (iamcredentials.googleapis.com)
#
#    You can learn more about enabling APIs at
#    https://support.google.com/googleapi/answer/6158841.
#
# 2. Create and configure a Workload Identity Provider for GitHub:
#    https://github.com/google-github-actions/auth#preferred-direct-workload-identity-federation.
#
#    Depending on how you authenticate, you will need to grant an IAM principal
#    permissions on Google Cloud:
#
#    - Artifact Registry Administrator (roles/artifactregistry.admin)
#    - Cloud Run Developer (roles/run.developer)
#
#    You can learn more about setting IAM permissions at
#    https://cloud.google.com/iam/docs/manage-access-other-resources
#
# 3. Change the values in the "env" block to match your values.

name: 'Build and Deploy to Cloud Run'

on:
  push:
    branches:
      - main

env:
  PROJECT_ID: 'image-encoding' #
  REGION: 'us-central1' #
  SERVICE: 'image-encoding' #
  GAR_NAME: 'image-encoding'

jobs:
  deploy:
    runs-on: 'ubuntu-latest'

    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - name: 'Checkout'
        uses: 'actions/checkout@v4' # actions/checkout@v4

      # Configure Workload Identity Federation and generate an access token.
      #
      # See https://github.com/google-github-actions/auth for more options,
      # including authenticating via a JSON credentials file.
      - id: 'auth'
        name: 'Google Auth'
        uses: 'google-github-actions/auth@v2' # google-github-actions/auth@v2
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY }}'

        
      # BEGIN - Docker auth and build
      - name: 'Configure Docker for Artifact Registry'
        run: |-
          gcloud auth configure-docker "${{ env.REGION }}-docker.pkg.dev" --quiet



      - name: 'Build and Push Container'
        run: |-
          DOCKER_TAG="${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.GAR_NAME }}/${{ env.SERVICE }}:${{ github.sha }}"
          docker build --tag "${DOCKER_TAG}" .
          docker push "${DOCKER_TAG}"

      - name: 'Debug Environment Variables'
        run: |
          echo "GCP_SA_KEY_B64: $GCP_SA_KEY_B64"

      - name: 'Deploy to Cloud Run'
        env:
          GCP_SA_KEY_B64: ${{ secrets.GCP_SA_KEY_B64 }}
        run: |
          gcloud run deploy ${{ env.SERVICE }} \
            --image=${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.GAR_NAME }}/${{ env.SERVICE }}:${{ github.sha }} \
            --region=${{ env.REGION }} \
            --allow-unauthenticated \
            --cpu=8 \
            --memory=32Gi \
            --concurrency=80 \
            --min-instances=1 \
            --max-instances=1 \
            --timeout=1000s \
            --cpu-boost \
            --no-cpu-throttling \
            --set-env-vars=GCP_SA_KEY_B64="${GCP_SA_KEY_B64}"

      - name: 'Show output'
        run: |2-
          echo ${{ steps.deploy.outputs.url }}
